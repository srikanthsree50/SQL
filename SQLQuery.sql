CREATE TABLE #STU(SID INT,SNAME VARCHAR(3))///SYNTAX FOR CREATING TEMPORARY TABLES

-----------------------------------------------------------
CREATE DATABASE MYDB //SYNTAX FOR CREATING DATABASES

---------------------------------------------------
USE MYDB   // SYNTAX FOR USING DATABASE FROM DATABASES

------------------------------------------------------
///////////////// SUB LANGUAGES IN SEQUEL /////

------------------DDL -DATA-DEFINITION LANGUAGE-----------

-------------------------------------------------------------------
--COMMANDS==== --CREATE--ALTER--SP_RENAME--TRUNCATE--DROP---------

EXAMPLE---CREATE DATABASE DB-----------------

CREATE TABLE MYTABLE(ID INT,NAME VARCHAR(5));------------------

----------------------------------------
EXAMPLE---SP_HELP TABLENAME ----SYNTAX -- FOR VIEWING TABLE STRUCTURE
-----------------------------------------------------------

USING-- ALTER-ALTER  COMMAND-------------------------------
----CHANGING SIZE AND DATATYPE OF OLD COLUMN TO NEW---
EXAMPLE-- ALTER TABLE [TNAME] ALTER COLUMN [COLNAME] NEWTYPE [NEWSIZE]

-----USING--- ALTER- ADD 
------ADDING NEW COLUMNS AT END OF TABLE COLUMNS-----
EXAMPLE-- ALTER TABLE [TNAME] ADD [NEWCOL1] [SIZE],[NEWCOL2] [SIZE]------------

USING SP_RENAME --------------
----FOR CHANGING OLD TABLE NAMES OR COLUMN NAMES TO NEW NAMES--
EXAMPL1-- SP_RENAME '[TABLENAME].[OLDCOLNAME]', '[NEWCOLNAME]
--EXAMPL2--SP_RENAME '[OLDTABNAME]','[NEWTABNAME]'

USING--ALTER-DROP--------------
----FOR DROPPING UNWANTED COLUMNS FROM TABLES---
EXAMPLE-- ALTER TABLE [TABLENAME] DROP COLUMN [COL1],[COL2]...---

USING--TRUNCATE--------------
---FOR DELETING DATA BUT NOT STRUCTURE OF A TABLE-----
EXAMPLE-- TRUNCATE TABLE [TABLENAME]

USING----DROP--------
--FOR DELETING DATA AND STRUCTURE PERMANENTLY...FROM DATABASE
EXAMPLE-- DROP TABLE [TABLENAME]
///////////////////////////////////////////////////////////////////////////////////

                   -------CREATING-ALTERING--DROPING--DATABASES----
------------------------------------------------------------------------------------------

USING-----CREATING DATABASE -- WITH---EXPLICITLY-----[NAME,FILENAME,SIZE,MAXSIZE,FILEGROWTH]----
--SYNTAX====CREATE DATABASE [DBNAME] ON(DATAFILE PROPERTIES ABOVE) LOGON(LOGFILE PROPERTIES ABOVE)
EXAMPLE--CREATE DATABASE MYDB ON(NAME="XYZMDF",FILENAME="E://MYDB.MDF",SIZE=8MB,MAXSIZE=20MB,FILEGROWTH=1MB) 
         LOGON(NAME="XYZLDF",FILENAME="E://MYDBLOG.LDF",SIZE=4MB,MAXSIZE=12MB,FILEGROWTH=1MB))

USING ----ALTERING DATABASE --FILES--MDF --OR--LDF--EXPLICITLY---
--SYNTAX--  ALTER DATABASE [DBNAME] ADD FILE(MDF FILE PROPERTIES)
            ALTER DATABASE [DBNAME] ADD LOGFILE(LOGFILE PROPERTIES )

USING ---ALTER--MODIFY-FILE----
--SYNTAX---CHANGING SIZE OF .LDF OR .MDF FILES----
EXAMPLE--ALTER DATABASE [DBNAME] MODIFY FILE (SET NEW PROPERTIES MDF OR LDF SAME FOR BOTH)

USING--ALTER-REMOVE-FILE-
-ONLY--SECONDARY--FILES--ARE--REMOVED--BUT-NOT--PRIMARY--FILES--
--SYNTAX--REMOVING--MDF-OR--LDF--FILES--FROM--EXISTING-DATABASES----
EXAMPLE-- ALTER DATABASE [DBNAME] REMOVE FILE [NAME]i.e'MNO' OR 'PQR'

USING---ALTER-MODIFY--
--FOR--RENAMEING --DATABASE NAMES---
EXAMPLE---ALTER DATABASE [OLDDBNAME] MODIFY NAME = [NEWDBNAME]

USING--DROP--DATABASE-- 
SYNTAX--FOR--DROPPING--DATABASE--
EXAMPLE--DROP DATABASE MYDB

////////////////////////////////////////////////////////////////////////////////
  -------                  --DATA MANIPULATION LANGUAGE--------------
  //////////////////////////////////////////////////////////////////////////////////////
  --------------WORKING --ON--DATA--IN--TABLES--------------------------------------
------------------  --COMMANDS----INSERT--UPDATE--DELETE-------------------------

USING--INSERT---IMPLCITLY-----
SYNTAX--FOR INSERTING ALL THE VALUES AT ONCE
EXAMPLE--INSERT INTO [TNAME] VALUES(VAL1,VAL2,VAL3......)

USING--INSERT---EXPLICITLY----
SYNTAX--FOR INSERTING SPECIFIC VALUES ONLY AND LEFTOVER WILL TAKE NULL BY DEFAULT
EXAMPLE-- INSERT INTO [TNAME](COL1,COL2) VALUES(VAL1,VAL2)

USING---INSERT--FOR--MULTIPLE RECORDS--AT--ONCE--
EXAMPLE---INSERT [TNAME] VALUES(),(),()

USING---UPDATE-----SET----WHERE--
EXAMPLE---UPDATE [TNAME] SET COLUMN = VALUE,COL2=VALUE...WHERE CONDITION.

USING--DELETE--FOR-ALL-RECORDS--
EXA----DELETE FROM [TNAME]

USING--DELETE--FOR--PARTICULAR--RECORD--WHERE---
EX--DELETE FROM [TNAME] WHERE CONDITION-----

/////////////////////////////////////////////////////////////////////////////////
---------------------DATA --QUERYING---RETRIEVING- --LANGUAGE--------------------
-COMMAND---SELECT--------------------------------------------------------
---------PROJECTION---    -FETCH--ALL--DATA--WITHOUT ANY---CONDITION--
---------SELECTION-------  -FETCH--DATA--BASED--ON--PARTICULAR---CONDITION---
-----------ALIAS------- COLUMN-LEVEL-------TABLE--LEVEL--------
EX------SELECT * FROM TNAME AS STD----------TABLE---LEVEL----
----------SELECT SID AS ID FROM TNAME ------COL--LEVEL

----IDENTITY---SEED,INCREMENT-------------
SYNTAX----CREATE TABLE TNAME(ID INT IDENTITY())--------

SETTING --IDENTITY--VALUES--EXPLICITLY--------
SYNYAX--- SET IDENTITY_INSERT TNAME ON---BY--DEFAULT--OFF--FOR---NOT INSERTING--
========================================================================
--------------------------- FUNCTIONS-------------------------------
-----------------SYSTEM-DEFINED-----------USER--DEFINED-----------------

---SYSTEM--DEFINED--TYPES---
---CHARACTER/STRING--FUNCTIONS----
--DATE--AND--TIME--
--AGGREGATE--GROUP--TYPES----
---------------------------------------------------

--MATHEMATIC/NUMERIC---FUNCTIONS---

------  ABSC()  --- RETURNS =VE VALUES
---  SELECT ABSC(-12) == 12

----CEILING------ RETURNS GREATER OR EQUAL VALUE
--- SELECT CEILING(-3.0) == -3

--FLOOR-----RETURNS LESSTHAN OR EQUAL TO VALUE
SELECT FLOOR(-5.005)===-6

---SQUARE------RETURNS SQUARE OF NUMBER
SELECT SQUARE(3) == 9

--POWER---RETURNS POWER OF NUMBER
SELECT POWER(2,3) = 8

--SIGN--- RETURN SIGN OF A VALUE--=+1 FOR +VE,-1 FOR -VE 0 FOR NEUTRAL
SELECT SIGN(45) == 1
SELECT SIGN(-3) == -1
SELECT SIGN(0) == 0

--SQRT--RETURN SQRT OF VALUE---
SELECT SQRT(9) = 3

PI()
SELECT PI() === 3.14

SIN()
SELECT SIN(0) = 0
SELECT SIN(90) = 0
SELECT COS(0) = 1
SELECT TAN(0) 0

LOG() RETURNS LOG VALUE---
LOG(3) = 1.09
LOG10(10)=1

--------------------
CHARACTER/STRING FUNCTIONS--
 SELECT LEN('HI') === 2
 SELECT ASCII('Z') =90
 SELECT CHAR(90) = Z
 SELECT LOWER('H') = h
 SELECT UPPER('h') = H
 SELECT LTRIM('     H') == H
 SELECT RTRIM('H    ') == H
 SELECT CHARINDEX(I,'HI') = 2
 SELECT REPLACE('JACK AND JUE','J','BL') = BLACK AND BLUE
 SELECT REVERSE('SA') = AS
 SELECT REPLICATE('H',4) = HHHH
 SELECT SUBSTRING('HELLO',2,3) = ELL
 SELECT CONCAT('H','I') = HI
 SELECT LEFT('WELL',2) == WE
 SELECT RIGHT('WELL',2) == LL
 SELECT ('H'+SPACE(5)+'I') == H               I
 ---------------------------
 ---------------
 DATE TIME FUNCTIONS-----------------------

 SELECT GETDATE() == 2019-09-18 14:26:17.700
 SELECT GETUTCDATE() == 2019-09-18 08:57:14.003
 SELECT DAY(GETDATE()) == 18
 SELECT MONTH(GETDATE()) == 9
 SELECT YEAR(GETDATE()) == 2019
 SELECT DATENAME(DW,GETDATE()) == WEDNESDAY
 SELECT DATENAME(MM,GETDATE()) == SEPTEMBER
 SELECT DATENAME(YY,GETDATE()) == 2019

 SELECT DATEADD(DD,2,GETDATE())
 SELECT DATEADD(MM,2,GETDATE())
 SELECT DATEADD(YY,2,GETDATE())

 SELECT DATEDIFF(DD,'2019-09-2018',GETDATE())
 SELECT DATEDIFF(MM,'2019-09-2018',GETDATE())
 SELECT DATEDIFF(YY,'2019-09-2018',GETDATE())

 SELECT DATEPART(DD,GETDATE())
  SELECT DATEPART(MM,GETDATE())
   SELECT DATEPART(YY,GETDATE())

 =---------------------------------------------------------------------

 AGGREGATE FUNCTIONS-----------------------------
 --------------------------------
 SELECT COUNT(*) FROM EMPLOYEE
 SELECT MAX(SALARY) FROM EMPLOYEE
 SELECT MIN(SALARY) FROM EMPLOYEE
 SELECT AVG(SALARY) FROM EMPLOYEE
 SELECT SUM(SALARY) FROM EMPLOYEE
 SELECT COUNT(SALARY) FROM EMPLOYEE
 SELECT COUNT(DISTINCT SALARY) FROM EMPLOYEE
 ------------------------------------------------------
 ///////////////////OPERATORS IN SQL SERVER------------
 ---------------------------------------------
 SET--OPERATORS---------

 UNION-----UNION-ALL----INTERSECT-----EXCEPT---

 --GROUPBY--HAVING--WHERE---ORDERBY------TOP(n)
 ---GROUP-BY--ROLLUP--CUBE----
 --------------------------------------------
 CREATING NEW TABLE FROM EXISTING TABLE----
 --SELECT * INTO NEWTABLE FROM OLDTABLE------

CREATING PARTICULAR COLUMNS TABLE FROM EXISTING TABLE-----
---SELECT COL,COL2,... INTO NEWTABLE FROM OLDTABLE---

 COPYING ONLY STRUCTURE FROM OLD TABLE TO NEW TABLE
 ---SELECT *  INTO NEWTABLE FROM OLDTABLE WHERE 1=0-------------

 COPYING ONLY DATA FROM ONETABLE TO ANOTHER TABLE
 INSERT INTO DUMMYTABLE SELECT * FROM OLDTABLE
 ------------------------------------------------------

CREATING---SYNONYMS------

SYNTAX--CREATIG SYNONYMS----WITH ALIAS NAME-
EXAMPE--- CREATE SYNONYM SYNEMP FOR EMPLOYEE

SYNTAX--DROPPING SYNONYM------
EXAMPLE--DROP SYNONYM SYNEMP

----------------------------------------------------------------------
-///////////////////////DATA - INTEGRITY-------WITH---CONSTRAINTS-------------
ENTITY-INTEGRITY------REFERENTIAL--INTEGRITY------DOMAIN---INTEGRITY-------

ENTITY===PK,NOTNULL,UNIQUE------------
REFERENTIAL---FOREIFNKEY------
DOMAIN-----CHECK---DEFAULT---

///////////////////////CONSTRAINTS/////////////////////////////////
--DEFAULT---UNIQUE---NOTNULL---PK---FK---CHECK-------------
CREATE TABLE TNAME(FOREIGNKEY REFERENCES PKTNAME(COL))

ALTERING ----ADDING--CONSTRAINTS-----

----------ADDING---PRIMARY--KEY-----
--SYNTAX--- ALTER TABLE TNAME ALTER COLUMN COLNAME INT NOT NULL--MUST BEFORE ADDING PRIMARYKEY
---NOW---- ALTER TABLE TNAME ADD CONSTRAINT PK_ID PRIMARY KEY(EID)

----------ADDING---UNIQUE--CONSTRAINT----
ALTER TABLE TNAME ADD CONSTRAINT CONNAME UQ UNIQUE(ENAME)---

----------ADDING--CHECK---CONSTRAINT----------
ALTER TABLE TNAME ADD CONSTRAINT CHK CHECK(SALARY>=289930)

------------ADDING---DEFAULT----CONSTRAINT---------
ALTER TABLE TNAME ADD CONSTRAINT DEF DEFAULT 45 FOR AGE

-------------ADDING FKEY TO-----EXISTING--TABLE------
ALTER TABLE DEPT ADD CONSTRAINT FK FOREIGN KEY(EID) REFERENCES EMP(EID) ON UPDATE CASCADE,ON DELETE CASCADE
G CONSTRAINTS----------------------
ALTER TABLE TNAME DROP CONSTRAINT CHK,DF,UQ....

---------------DROPPING PRIMARY---KEY------AFTER ---DROPING FOREIGN KEY REFERENCE-----
ALTER TABLE FK-TNAME DROP CONSTRAINT FK
ALTER TABLE PK-TNAME DROP CONSTRAINT PK

///////////////////////////////////////////////////////////////////////////////////////
--------------------TRANSACTION----CONTROL-----LANGUAGE---------------------------
--------BEGIN--TRANSACTION---COMMIT---ROLLBACK----SAVEPOINT----------
SYNTAX--BEGIN TRANSACTION
        COMMIT

SYNTAX---BEGIN TRANSACTION
          ROLLBACK

SYNTAX---BEGIN TRANSACTION
         SOME STATEMENTS
        SAVE TRANSACTION S1
		SOME STATEMENTS 
	--NOW--IF-WE-USE
	BEGIN TRANSACTION 
	ROLLBACK
------IT--WILL--ROLLBACK----ALL---RECORDS---- 

----IF--I---USE----
     BEGIN TRANSACTION
	 ROLLBACK TRANSACTION S1
	---THEN---IT--WILL--ROLLBACK--ONLY UPTO---STATEMENTS--BEFORE S1 TRANSACTION